#!/usr/bin/env python
"""
    %prog [options] config_file out_file meds_file1 meds_files2 ...
    Process the input meds file.
    """
from __future__ import print_function
from ngmixer.ngmixit import NGMixIt

from optparse import OptionParser
parser = OptionParser(__doc__)

parser.add_option("--fof-range",default=None,
                  help=("Inclusive, zero-offset range of FoFs to "
                        "process"))
parser.add_option("--work-dir", default='.',
                  help=("copy files local for processing.  "
                        "Also write to local files and copy out."
                        "The local files are not removed."))

parser.add_option("--profile", action='store_true',
                  help=("Profile the code"))

parser.add_option("--make-plots", action='store_true',
                  help=("make some plots"))

parser.add_option("--seed", default=None, 
                  help=("random seed"))

def get_range(rng_string):
    if rng_string is not None:
        rng = rng_string.split(',')
        rng = [int(i) for i in rng]
    else:
        rng=None

    return rng

if __name__ == '__main__':
    options, args = parser.parse_args(sys.argv[1:])
    if len(args) < 3:
        parser.print_help()
        sys.exit(45)

    config_file=args[0]
    out_file=args[1]
    data_files=args[2:]
    fof_range = get_range(options.fof_range)
    if options.seed is not None:
        seed = int(options.seed)
    else:
        seed = None

    NGMixIt(config_file,
            out_file,
            data_files,
            fof_range=fof_range,
            work_dir=options.work_dir,
            random_seed=seed,
            profile=options.profile,
            make_plots=options.make_plots)
    
    












            
